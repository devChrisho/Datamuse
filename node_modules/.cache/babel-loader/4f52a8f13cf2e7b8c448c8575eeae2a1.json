{"ast":null,"code":"var _jsxFileName = \"/Users/christopher/Desktop/Local_code/datamuse_app/src/components/Input.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = `https://api.datamuse.com/words?rel_rhy=`;\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #f07070;\n  width: 40%;\n  border-radius: 1rem;\n  padding: 3rem;\n\n  h1 {\n    font-family: 'Work Sans', sans-serif;\n    color: #4a3da0;\n    font-weight: 100;\n    font-size: 3.2rem;\n    margin-top: 2rem;\n    text-align: center;\n  }\n  input {\n    margin-top: 1rem;\n    height: 4rem;\n    font-size: 1.6rem;\n    background-color: rgba(255, 255, 255, 0.153);\n    text-align: center;\n    border-radius: 0.5rem;\n    border: 0.5px solid #4a3da0;\n    outline: none;\n    color: #4a3da0;\n\n    ::placeholder {\n      color: rgba(74, 61, 160, 0.517);\n    }\n  }\n  button {\n  }\n`;\n_c = StyledDiv;\nconst StyledButton = styled.button`\n  padding: 1.6rem;\n  width: 40%;\n  color: #4a3da0;\n  margin-top: 2rem;\n  background-color: #70f094;\n  outline: none;\n  border: 1px solid #70f094;\n  border-radius: 5rem;\n  font-size: 1.6rem;\n  &:active {\n    background-color: rgba(112, 240, 148, 0.564);\n    transition: 0.1s all ease-in-out;\n  }\n`;\n_c2 = StyledButton;\nconst StyledOutput = styled.div`\n  height: 400px;\n  width: 100%;\n  margin-top: 2rem;\n  background-color: slategray;\n  border: 1 px solid darkblue;\n  color: white;\n  padding: 2rem;\n  font-size: 1.2rem;\n  border-radius: 0.5rem;\n`;\n_c3 = StyledOutput;\n\nconst Input = () => {\n  _s();\n\n  const [word, setWord] = useState('');\n  const [maxItems, setMaxItems] = useState(10);\n  const [results, setResults] = useState([]);\n  const userInput = new useRef(null);\n\n  const buttonClickHandler = () => {\n    findRhyme(word, maxItems);\n  };\n\n  const inputKeyPress = e => {\n    if (e.key === 'Enter') {\n      findRhyme(word, maxItems);\n    } else {\n      setWord(e.target.value);\n    }\n  };\n\n  const findRhyme = async (userWord, userMaxItems) => {\n    const endpoint = api + userWord + '&max=' + userMaxItems;\n    const result = await axios(endpoint);\n    console.log(result.data);\n    setResults(result.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledDiv, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Time to find a Rhyme \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"type a word...\",\n      autoCorrect: \"false\",\n      autoComplete: \"false\",\n      spellCheck: \"false\",\n      ref: userInput,\n      onKeyUp: inputKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n      onClick: buttonClickHandler,\n      children: \"Find\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledOutput, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"baBadm6f1b6H5ja+xyh+h9YWy0k=\");\n\n_c4 = Input;\nexport default Input;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledDiv\");\n$RefreshReg$(_c2, \"StyledButton\");\n$RefreshReg$(_c3, \"StyledOutput\");\n$RefreshReg$(_c4, \"Input\");","map":{"version":3,"sources":["/Users/christopher/Desktop/Local_code/datamuse_app/src/components/Input.js"],"names":["axios","styled","useRef","useState","api","StyledDiv","div","StyledButton","button","StyledOutput","Input","word","setWord","maxItems","setMaxItems","results","setResults","userInput","buttonClickHandler","findRhyme","inputKeyPress","e","key","target","value","userWord","userMaxItems","endpoint","result","console","log","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;AAEA,MAAMC,GAAG,GAAI,yCAAb;AAEA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlCA;KAAMD,S;AAoCN,MAAME,YAAY,GAAGN,MAAM,CAACO,MAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;MAAMD,Y;AAgBN,MAAME,YAAY,GAAGR,MAAM,CAACK,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMG,Y;;AAYN,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMc,SAAS,GAAG,IAAIf,MAAJ,CAAW,IAAX,CAAlB;;AAEA,QAAMgB,kBAAkB,GAAG,MAAM;AAC/BC,IAAAA,SAAS,CAACR,IAAD,EAAOE,QAAP,CAAT;AACD,GAFD;;AAIA,QAAMO,aAAa,GAAGC,CAAC,IAAI;AACzB,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBH,MAAAA,SAAS,CAACR,IAAD,EAAOE,QAAP,CAAT;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACS,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP;AACD;AACF,GAND;;AAQA,QAAML,SAAS,GAAG,OAAOM,QAAP,EAAiBC,YAAjB,KAAkC;AAClD,UAAMC,QAAQ,GAAGvB,GAAG,GAAGqB,QAAN,GAAiB,OAAjB,GAA2BC,YAA5C;AAEA,UAAME,MAAM,GAAG,MAAM5B,KAAK,CAAC2B,QAAD,CAA1B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACAf,IAAAA,UAAU,CAACY,MAAM,CAACG,IAAR,CAAV;AACD,GAND;;AAQA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,gBAFd;AAGE,MAAA,WAAW,EAAC,OAHd;AAIE,MAAA,YAAY,EAAC,OAJf;AAKE,MAAA,UAAU,EAAC,OALb;AAME,MAAA,GAAG,EAAEd,SANP;AAOE,MAAA,OAAO,EAAEG;AAPX;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEF,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,YAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA7CD;;GAAMR,K;;MAAAA,K;AA+CN,eAAeA,KAAf","sourcesContent":["import axios from 'axios';\nimport styled from 'styled-components';\nimport { useRef, useState } from 'react';\n\nconst api = `https://api.datamuse.com/words?rel_rhy=`;\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #f07070;\n  width: 40%;\n  border-radius: 1rem;\n  padding: 3rem;\n\n  h1 {\n    font-family: 'Work Sans', sans-serif;\n    color: #4a3da0;\n    font-weight: 100;\n    font-size: 3.2rem;\n    margin-top: 2rem;\n    text-align: center;\n  }\n  input {\n    margin-top: 1rem;\n    height: 4rem;\n    font-size: 1.6rem;\n    background-color: rgba(255, 255, 255, 0.153);\n    text-align: center;\n    border-radius: 0.5rem;\n    border: 0.5px solid #4a3da0;\n    outline: none;\n    color: #4a3da0;\n\n    ::placeholder {\n      color: rgba(74, 61, 160, 0.517);\n    }\n  }\n  button {\n  }\n`;\n\nconst StyledButton = styled.button`\n  padding: 1.6rem;\n  width: 40%;\n  color: #4a3da0;\n  margin-top: 2rem;\n  background-color: #70f094;\n  outline: none;\n  border: 1px solid #70f094;\n  border-radius: 5rem;\n  font-size: 1.6rem;\n  &:active {\n    background-color: rgba(112, 240, 148, 0.564);\n    transition: 0.1s all ease-in-out;\n  }\n`;\n\nconst StyledOutput = styled.div`\n  height: 400px;\n  width: 100%;\n  margin-top: 2rem;\n  background-color: slategray;\n  border: 1 px solid darkblue;\n  color: white;\n  padding: 2rem;\n  font-size: 1.2rem;\n  border-radius: 0.5rem;\n`;\n\nconst Input = () => {\n  const [word, setWord] = useState('');\n  const [maxItems, setMaxItems] = useState(10);\n  const [results, setResults] = useState([]);\n\n  const userInput = new useRef(null);\n\n  const buttonClickHandler = () => {\n    findRhyme(word, maxItems);\n  };\n\n  const inputKeyPress = e => {\n    if (e.key === 'Enter') {\n      findRhyme(word, maxItems);\n    } else {\n      setWord(e.target.value);\n    }\n  };\n\n  const findRhyme = async (userWord, userMaxItems) => {\n    const endpoint = api + userWord + '&max=' + userMaxItems;\n\n    const result = await axios(endpoint);\n    console.log(result.data);\n    setResults(result.data);\n  };\n\n  return (\n    <StyledDiv>\n      <h1>Time to find a Rhyme </h1>\n      <input\n        type='text'\n        placeholder='type a word...'\n        autoCorrect='false'\n        autoComplete='false'\n        spellCheck='false'\n        ref={userInput}\n        onKeyUp={inputKeyPress}\n      ></input>\n      <StyledButton onClick={buttonClickHandler}>Find</StyledButton>\n      <StyledOutput>\n        <p></p>\n      </StyledOutput>\n    </StyledDiv>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}